@using AppWeb.Components.Pages.Tags.Dialogs
@using AppWeb.Services
@inject IJSRuntime JSRuntime
@inject IDialogService DialogService
@inject CookiesService CookiesService



<div class="col-auto col-md-10 mb-5">
    <article class="card text-white bg-dark rounded-5">
        <header class="card-header row">
            <div class="row justify-content-between align-items-center">
                <div class="col-auto">
                        <MudImage Src="@($"{Const.url}/Doctypes/Avatars/{CurrentPost.User.Avatar}")" Alt="Avatar" 
                        Style="border-radius:50%; max-height:150px"></MudImage>
                </div>
                <div class="col">
                    <MudLink Href="@($"{Const.url}/user?id={CurrentPost.User.UserId}")">
                        <MudText Typo="Typo.h3">@CurrentPost.User.Name</MudText>
                    </MudLink>
                </div>
                <div class="col-auto">
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="OpenDialogAsync">Share Post</MudButton>
                </div>
            </div>
            <MudText Class="col-10" Typo="Typo.h4">@CurrentPost.Body</MudText>

            <div class="col-auto p-3 text-center">
                <time datetime="@CurrentPost.CreatedDate" data-toggle="tooltip" title="@CurrentPost.CreatedDate">
                    @CurrentPost.CreatedDate.ToShortDateString()
                </time>
                @{
                    var icon = CurrentPost.Privacy switch
                    {
                        PostPrivacy.p_public => @Icons.Material.Outlined.Public,
                        PostPrivacy.p_private => @Icons.Material.Filled.Lock,
                        PostPrivacy.p_only_friends => @Icons.Material.Filled.PeopleAlt,
                        _ => ""
                    };
                }
                <MudIcon Icon="@icon"></MudIcon>
            </div>
        </header>
        
        <section class="row g-3 p-3 justify-content-center">
            @foreach (var media in CurrentPost.files)
            {
                <div class="col-6 mb-2">
                    @if (media.fileType.Split('/')[0] == "video")
                    {
                        <video class='same-size rounded-5' controls>
                            <source src='@Const.url/Doctypes/@media.uri' type="@media.fileType">
                        </video>
                    }
                    else
                    {
                        <img loading='lazy' class='same-size rounded-5' src='@Const.url/Doctypes/@media.uri' alt='Image' />
                    }
                </div>
            }
        </section>
    </article>
    <div class="p-3 mt-3">
        <Comment post="CurrentPost" CurrentUser="CurrentUser"/>
    </div>
</div>


@code {
    [Parameter]
    public required DbContext.Models.Post CurrentPost { get; set; }
    [Parameter]
    public required User CurrentUser { get; set; }

    public void OpenDialogAsync()
    {
        DialogService.Show<ShareDialog>("Share Post", 
        new DialogParameters { { "Title", "Share post" },
        {"Content", $"{Const.url}/post?id={CurrentPost.PostId}"} });
    }
}
