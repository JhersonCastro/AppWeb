@page "/Search"
@using Services
@inject UserService UserServices
<div>
    @if (!string.IsNullOrEmpty(_errorMessage))
    {
        <p class="text-danger">@_errorMessage</p>
        <a href="/">Go home</a>
    }
</div>
<div>
    @foreach (var user in _users)
    {
        <a href="/user?id=@user.UserId" class="user-profile p-3">
            <div class="container card">
                <section class="card-body row">
                    <img class="rounded-5 col-2" style="aspect-ratio:1/1; object-fit:cover" src="/Doctypes/Avatars/@user.Avatar" alt="Avatar"/>
                    <h1 class="col">@user.Name</h1>
                    <h2 class="col">@user.NickName</h2>
                </section>
            </div>
        </a>
    }
</div>
<style>
    .user-profile{
        color:black;
    }
</style>
@code {
    [SupplyParameterFromQuery]
    public string? Username { get; set; }
    private List<User> _users = [];
    private string? _errorMessage;
    protected override async Task OnInitializedAsync()
    {
        _users = await UserServices.PredictUserAsync(Username);
        if (_users.Count == 0)
            _errorMessage = "No users found";

    }

}
