@using global::Services
@using Services
@inject UserService userService
@inject PostService postService
@inject NavigationManager navigationManager
@inject CookiesService cookiesService
@inject UserState userState
@page "/User"
@if (userContext != null)
{
    <PageTitle>@userContext.Name</PageTitle>
    <div class="justify-content-center row" style="margin-top:2.5%">
        <div class="col-2 justify-content-center ">
            <img src="/Doctypes/Avatars/@userContext.Avatar" alt="Avatar" class="rounded-5 img-thumbnail" />
        </div>
    </div>
    <br />
    <div class="justify-content-center row g-4">
        <h1 class="col-auto">@userContext.Name</h1>
        <h1 class="col-auto" style="color:deepskyblue">@@@userContext.NickName</h1>
    </div>
    <br />
    <div class="row justify-content-center" style="margin-right:0px;">
        @foreach (var post in userContext.Posts.OrderByDescending(p => p.CreatedDate))
        {
            <AppWeb.Components.Pages.TagPost.Post post="@post"></AppWeb.Components.Pages.TagPost.Post>
        }
    </div>
}
@code {
    [SupplyParameterFromQuery]
    public string id { get; set; }
    private DbContext.Models.User userContext;
    protected override async Task OnInitializedAsync()
    {
        try
        {
            var user = await userService.getUserById(int.Parse(id));
            if(user==null)
                throw new Exception("User doesn't found");
            userContext = new DbContext.Models.User
            {
                Name = user.Name,
                NickName = user.NickName,
                Avatar = user.Avatar,
                Posts = await postService.GetPostsAsync(user, null)
            };
        }
        catch (Exception e)
        {
            navigationManager.NavigateTo("/");
        }
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
    }
}
